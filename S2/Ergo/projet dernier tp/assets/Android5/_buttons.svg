<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->
<svg id="svg2" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" height="47" width="408" version="1.1" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" onload="onLoad(evt)" onresize="onResize(evt)">
 <title id="title2818">WireframeSketcher SVG asset</title>
 <defs id="defs4"></defs>
 <metadata id="metadata7">
  <rdf:RDF>
   <cc:Work rdf:about="">
    <dc:format>image/svg+xml</dc:format>
    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
    <dc:title>WireframeSketcher SVG asset</dc:title>
    <dc:creator>
     <cc:Agent>
      <dc:title>Peter Severin</dc:title>
     </cc:Agent>
    </dc:creator>
    <dc:rights>
     <cc:Agent>
      <dc:title>Copyright (c) WireframeSketcher.com</dc:title>
     </cc:Agent>
    </dc:rights>
   </cc:Work>
  </rdf:RDF>
 </metadata>
 <script><![CDATA[
	var svg, doc, container;
	var hPadding = 10, vPadding = 6;
	
	function onLoad(evt) {
	    svg = evt.target;
	    doc = svg.ownerDocument;
		
        container = doc.createElement("g");
        svg.insertBefore(container, svg.firstChild);
	}
	
	function onResize(evt) {
	    var width = parseInt(svg.getAttribute("width"));
	    var height = parseInt(svg.getAttribute("height"));
	    
    	var itemWidth = Math.round(width / $items.length);
	    var selectionIndex = ($model.selection === null || $model.selection === "") ? -1 : Number($model.selection);
    	var lastItemWidth = width - itemWidth * ($items.length - 1);
		if(!(selectionIndex >= -1 && selectionIndex < $items.length))
			selectionIndex = -1;

	    clearNode(container);
	    
	    for (var i = 0, n = $items.length, x = 1, y = 1; i < n; i++) {
	        var item = $items[i];
	    	var iItemWidth = item.width + hPadding * 2;
	        
	        var text = doc.createElement("foreignObject");
	        text.setAttribute("id", "item" + i);
	        text.setAttribute("x", x - 1);
	        text.setAttribute("y", y - 1)
	        text.setAttribute("width", iItemWidth);
	        text.setAttribute("height", height);
	        text.setAttribute("stroke", i == selectionIndex ? "black" : "white");
	        container.appendChild(text);
	        	
	        x += iItemWidth;
	    }
	}
	
	function clearNode(node) {
	    while (node.firstChild) {
	        node.removeChild(node.firstChild);
	    }
	}
	
	function getPreferredSize() {
	    var width = 0,
	        maxHeight = 0;
	
	    for (var i = 0, n = $items.length; i < n; i++) {
	        var item = $items[i];
	        width += item.width;
	        maxHeight = Math.max(maxHeight, item.height);
	    }
	
	    width += $items.length * hPadding * 2;
	    maxHeight += vPadding * 2;
	
	    return {
	        width: width,
	        height: maxHeight
	    };
	}
 ]]></script>
</svg>
