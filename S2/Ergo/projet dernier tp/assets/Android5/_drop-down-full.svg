<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->
<svg id="svg2" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" height="9" width="276" version="1.1" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" onload="onLoad(evt)" onresize="onResize(evt)">
 <title id="title2818">WireframeSketcher SVG asset</title>
 <defs id="defs4"></defs>
 <metadata id="metadata7">
  <rdf:RDF>
   <cc:Work rdf:about="">
    <dc:format>image/svg+xml</dc:format>
    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
    <dc:title>WireframeSketcher SVG asset</dc:title>
    <dc:creator>
     <cc:Agent>
      <dc:title>Peter Severin</dc:title>
     </cc:Agent>
    </dc:creator>
    <dc:rights>
     <cc:Agent>
      <dc:title>Copyright (c) WireframeSketcher.com</dc:title>
     </cc:Agent>
    </dc:rights>
   </cc:Work>
  </rdf:RDF>
 </metadata>
 <script><![CDATA[
 var doc, svg, field, arrow, background;
 var arrowWidth = 10, arrowHeight = 5, hPadding = 17;
 var text;
 
 function onLoad(evt) {
 	svg = evt.target;
 	doc = svg.ownerDocument;
 	field = doc.getElementById("field");
 	arrow = doc.getElementById("arrow");
 	
 	text = doc.createElement("foreignObject");
 	text.setAttribute("id", "item0");
 	text.setAttribute("y", 0);
 	svg.appendChild(text);
 	
 	background = doc.createElement("rect");
 	background.setAttribute("x", 0);
 	background.setAttribute("y", 0);
 	background.setAttribute("fill", "white");
 	svg.insertBefore(background, field); 	
 }
 
 function onResize(evt) {
 	var width = parseInt(svg.getAttribute("width"));
 	var height = parseInt(svg.getAttribute("height"));
 	
 	text.setAttribute("x", hPadding);
 	text.setAttribute("y", 0);
 	text.setAttribute("width", width - hPadding * 2);
 	text.setAttribute("height", height);
 
  	background.setAttribute("width", width);
 	background.setAttribute("height", height);
 	
 	field.setAttribute("d", "M0," + (height - 1) + "," + (width) + "," + (height - 1));
 	arrow.setAttribute("transform", "translate(" + (width - 32 - 1) + "," + Math.round((height - arrowHeight) / 2) + ")");
 	
 	if($model.state == State.DISABLED) {
 		field.setAttribute("stroke", "#808080");
 		text.setAttribute("stroke", "#808080");
 		text.removeAttribute("fill");
 		arrow.setAttribute("fill", "#808080");
 	} else if($model.state == State.FOCUSED) {
 		field.setAttribute("stroke", "#009385");
 		text.removeAttribute("stroke");
 		text.setAttribute("fill", "white");
 		arrow.setAttribute("fill", "black");
 	} else {
 		field.setAttribute("stroke", $model.borderColor);
 		text.removeAttribute("stroke");
 		text.setAttribute("fill", "white");
 		arrow.setAttribute("fill", $model.borderColor);
 	}
 }
 
 function getPreferredSize() {
	return { width: $item.width + hPadding * 2 + arrowWidth, 
		height: 56
		}; 	
 }
 ]]></script>
 <path id="field" stroke-linejoin="miter" d="M1,1,275,1" stroke="#000" stroke-linecap="butt" stroke-miterlimit="4" stroke-dasharray="none" stroke-width="2" fill="none"/>
 <path id="arrow" style="enable-background:accumulate;color:#000000;" d="M0,0,10,0,5,5z" fill-rule="nonzero" fill="#000"/>
</svg>
